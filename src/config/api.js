/**
 * –ì–ª–æ–±–∞–ª—å–Ω–∞—è –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è API endpoints
 * 
 * –ò–∑–º–µ–Ω–∏—Ç–µ BASE_URL –¥–ª—è –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏—è –º–µ–∂–¥—É –æ–∫—Ä—É–∂–µ–Ω–∏—è–º–∏
 */

// ====================================
// üîß –ì–õ–ê–í–ù–ê–Ø –ù–ê–°–¢–†–û–ô–ö–ê - –ú–ï–ù–Ø–ô–¢–ï –ó–î–ï–°–¨
// ====================================

/**
 * –ë–∞–∑–æ–≤—ã–π URL –¥–ª—è –≤—Å–µ—Ö API –∑–∞–ø—Ä–æ—Å–æ–≤
 * 
 * –í–∞—Ä–∏–∞–Ω—Ç—ã:
 * - Production: 'https://sandkittens.me/api'
 * - Localhost: 'http://127.0.0.1:8080'
 * - Custom: 'https://your-server.com'
 */
export const BASE_URL = 'https://sandkittens.me';
// export const BASE_URL = 'http://127.0.0.1:8000';

// ====================================
// –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ (–æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ)
// ====================================

/**
 * Timeout –¥–ª—è API –∑–∞–ø—Ä–æ—Å–æ–≤ (–º—Å)
 */
export const API_TIMEOUT = 30000; // 30 —Å–µ–∫—É–Ω–¥

/**
 * –í–∫–ª—é—á–∏—Ç—å –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ API –∑–∞–ø—Ä–æ—Å–æ–≤
 */
export const ENABLE_API_LOGGING = true;

/**
 * Retry –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
 */
export const API_RETRY_CONFIG = {
  maxRetries: 3,
  retryDelay: 1000, // 1 —Å–µ–∫—É–Ω–¥–∞
  retryOn: [408, 500, 502, 503, 504], // HTTP –∫–æ–¥—ã –¥–ª—è retry
};

/**
 * API endpoints
 */
export const API_ENDPOINTS = {
  // Workflow API
  WORKFLOW: '/client/workflow',
  WORKFLOWS_LIST: '/api/workflows',
  WORKFLOW_SAVE: '/api/workflows',
  
  // Sandbox API (legacy)
  SANDBOX_START: '/api/start',
  SANDBOX_ACTION: '/api/action',
};

/**
 * –ü–æ–ª—É—á–∏—Ç—å –ø–æ–ª–Ω—ã–π URL –¥–ª—è endpoint
 * 
 * @param {string} endpoint - Endpoint –ø—É—Ç—å (–∏–∑ API_ENDPOINTS)
 * @returns {string} - –ü–æ–ª–Ω—ã–π URL
 * 
 * @example
 * const url = getApiUrl(API_ENDPOINTS.WORKFLOW);
 * // => 'https://sandkittens.me/client/workflow'
 */
export function getApiUrl(endpoint) {
  const base = BASE_URL.replace(/\/$/, ''); // –£–±–∏—Ä–∞–µ–º trailing slash
  const path = endpoint.startsWith('/') ? endpoint : `/${endpoint}`;
  return `${base}${path}`;
}

/**
 * –õ–æ–≥–∏—Ä–æ–≤–∞—Ç—å API –∑–∞–ø—Ä–æ—Å (–µ—Å–ª–∏ –≤–∫–ª—é—á–µ–Ω–æ)
 */
export function logApiRequest(method, url, data = null) {
  if (ENABLE_API_LOGGING) {
    console.log(`[API] ${method} ${url}`, data ? data : '');
  }
}

/**
 * –õ–æ–≥–∏—Ä–æ–≤–∞—Ç—å API –æ—Ç–≤–µ—Ç (–µ—Å–ª–∏ –≤–∫–ª—é—á–µ–Ω–æ)
 */
export function logApiResponse(method, url, response, duration) {
  if (ENABLE_API_LOGGING) {
    console.log(`[API] ${method} ${url} ‚Üí ${response.status} (${duration}ms)`);
  }
}

/**
 * –õ–æ–≥–∏—Ä–æ–≤–∞—Ç—å API –æ—à–∏–±–∫—É (–µ—Å–ª–∏ –≤–∫–ª—é—á–µ–Ω–æ)
 */
export function logApiError(method, url, error, duration) {
  if (ENABLE_API_LOGGING) {
    console.error(`[API] ${method} ${url} ‚Üí ERROR (${duration}ms)`, error.message);
  }
}

// ====================================
// Environment-based override
// ====================================

/**
 * –ü–æ–ª—É—á–∏—Ç—å BASE_URL —Å —É—á—ë—Ç–æ–º environment variable
 * –ü—Ä–∏–æ—Ä–∏—Ç–µ—Ç: VITE_WORKFLOW_API_BASE > BASE_URL –∏–∑ —ç—Ç–æ–≥–æ —Ñ–∞–π–ª–∞
 */
export function getBaseUrl() {
  return (import.meta.env.VITE_WORKFLOW_API_BASE ?? BASE_URL).replace(/\/$/, '');
}

// ====================================
// –≠–∫—Å–ø–æ—Ä—Ç –¥–ª—è —É–¥–æ–±—Å—Ç–≤–∞
// ====================================

export default {
  BASE_URL: getBaseUrl(),
  API_TIMEOUT,
  ENABLE_API_LOGGING,
  API_RETRY_CONFIG,
  API_ENDPOINTS,
  getApiUrl,
  logApiRequest,
  logApiResponse,
  logApiError,
};
