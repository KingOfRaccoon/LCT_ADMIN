/**
 * –¢–µ—Å—Ç –ø—Ä–æ—Å—Ç—ã—Ö –±–∏–Ω–¥–∏–Ω–≥–æ–≤ (–±–µ–∑ —Ç–µ–∫—Å—Ç–∞ –≤–æ–∫—Ä—É–≥ ${})
 * –¶–µ–ª—å: —É–±–µ–¥–∏—Ç—å—Å—è, —á—Ç–æ ${variable} –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç—Å—è –ø—Ä–∞–≤–∏–ª—å–Ω–æ –∫–∞–∫ –ø—Ä–æ—Å—Ç–æ–π –±–∏–Ω–¥–∏–Ω–≥
 */

const { resolveBindingValue } = require('./src/pages/Sandbox/utils/bindings.js');

console.log('=== –¢–µ—Å—Ç –ø—Ä–æ—Å—Ç—ã—Ö –±–∏–Ω–¥–∏–Ω–≥–æ–≤ ===\n');

const testCases = [
  {
    binding: { reference: '${product.name}' },
    context: { product: { name: 'iPhone 15 Pro' } },
    expected: 'iPhone 15 Pro',
    description: '–í–ª–æ–∂–µ–Ω–Ω–æ–µ —Å–≤–æ–π—Å—Ç–≤–æ –æ–±—ä–µ–∫—Ç–∞'
  },
  {
    binding: { reference: '${count}' },
    context: { count: 42 },
    expected: 42,
    description: '–ü—Ä–æ—Å—Ç–∞—è –ø–µ—Ä–µ–º–µ–Ω–Ω–∞—è (—á–∏—Å–ª–æ)'
  },
  {
    binding: { reference: '${title}' },
    context: { title: '–ó–∞–≥–æ–ª–æ–≤–æ–∫' },
    expected: '–ó–∞–≥–æ–ª–æ–≤–æ–∫',
    description: '–ü—Ä–æ—Å—Ç–∞—è –ø–µ—Ä–µ–º–µ–Ω–Ω–∞—è (—Å—Ç—Ä–æ–∫–∞)'
  },
  {
    binding: { reference: '${cart_response.total_items_count}' },
    context: { cart_response: { total_items_count: 5 } },
    expected: 5,
    description: '–ì–ª—É–±–æ–∫–æ –≤–ª–æ–∂–µ–Ω–Ω–æ–µ —Å–≤–æ–π—Å—Ç–≤–æ'
  }
];

let passed = 0;
let failed = 0;

testCases.forEach(({ binding, context, expected, description }) => {
  console.log(`\n–ü—Ä–æ–≤–µ—Ä—è–µ–º: ${binding.reference}`);
  console.log(`  –ö–æ–Ω—Ç–µ–∫—Å—Ç:`, JSON.stringify(context, null, 2));
  
  const result = resolveBindingValue(binding, context, '');
  console.log(`  –†–µ–∑—É–ª—å—Ç–∞—Ç:`, JSON.stringify(result));
  console.log(`  –û–∂–∏–¥–∞–µ—Ç—Å—è:`, JSON.stringify(expected));
  
  const success = result === expected;
  
  if (success) {
    console.log(`‚úÖ –£–°–ü–ï–• (${description})`);
    passed++;
  } else {
    console.log(`‚ùå –ü–†–û–í–ê–õ (${description})`);
    failed++;
  }
});

console.log('=== –†–µ–∑—É–ª—å—Ç–∞—Ç—ã ===');
console.log(`‚úÖ –ü—Ä–æ–π–¥–µ–Ω–æ: ${passed}/${testCases.length}`);
console.log(`‚ùå –ü—Ä–æ–≤–∞–ª–µ–Ω–æ: ${failed}/${testCases.length}`);

if (failed === 0) {
  console.log('\nüéâ –í—Å–µ —Ç–µ—Å—Ç—ã –ø—Ä–æ–π–¥–µ–Ω—ã! –ü—Ä–æ—Å—Ç—ã–µ –±–∏–Ω–¥–∏–Ω–≥–∏ —Ä–∞–±–æ—Ç–∞—é—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ.');
} else {
  console.log('\n‚ö†Ô∏è –ù–µ–∫–æ—Ç–æ—Ä—ã–µ —Ç–µ—Å—Ç—ã –ø—Ä–æ–≤–∞–ª–∏–ª–∏—Å—å. –ü—Ä–æ—Å—Ç—ã–µ –±–∏–Ω–¥–∏–Ω–≥–∏ –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞—é—Ç—Å—è –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω–æ.');
}
